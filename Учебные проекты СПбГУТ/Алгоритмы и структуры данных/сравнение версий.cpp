#include <iostream>
#include <Windows.h>
#include <fstream>
#include <string>

using namespace std;

int main() {
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    string numb1; /*регистрируем первую версию*/
    string numb2; /*вторая версия*/
    cin >> numb1; cin >> numb2;
    int n1 = 0, n2 = 0; /*очков первой и второй*/
    int t1 = 0, t2 = 0; /*кол-во точек*/

    for (int i = 0; i < numb1.length(); i++)if (numb1[i] == '.') { t1++; }
    for (int i = 0; i < numb2.length(); i++)if (numb2[i] == '.') { t2++; }
    if (t1 < t2) { t1 = t2; } /*для дальнейшей работы. далее t1 - максимальное кол-во точек*/


    /*у нас есть точки, значит есть данные о количество уровней версии
    если 1 точка, то всего 2 уровня(1.2 или 5.6)
    если 2 точки, то 2.3.4 или 4.5.3*/

    int* mass1 = new int[t1 + 1];
    int* mass2 = new int[t1 + 1];
    for (int i = 0;i < t1 + 1;i++) { mass1[i] = 0;mass2[i] = 0; } /*их тоже нужно предварительно обнулять!!!*/
    int k1 = 0, k2 = 0; /*для фиксации уровня версии  0 - самый старший, 1 - на одну точку ниже, последний - самый младший*/
    bool p1 = 0, p2 = 0; /*Наличие постфикса*/
    /*сначало обрабатываем с первой строкой*/
    for (int i = 0; i < numb1.length(); i++)
    {
        if ((numb1[i] > '0') && (numb1[i] <= '9')) { /*игнорируем 0 и v, нас волнует 1-9, '-' и '.' */
            n1 = n1 * 10;/*тк мы считываем посимвольно*/
            n1 += (int(numb1[i]) - '0');
            mass1[k1] = n1; /* предварительно сохранить результат(вдруг следующее будет конец строка*/
        }
        if (numb1[i] == '.') { mass1[k1] = n1; n1 = 0; k1++; }
        if (numb1[i] == '-') { mass1[k1] = n1; n1 = 0; k1++; p1 = 1; break; } /*обнаружен постфикс - значит p1 = true и предварительно завершаем цикл.*/
    }

    /*потом обрабатываем со второй строкой*/
    for (int i = 0; i < numb2.length(); i++) {
        if ((numb2[i] > '0') && (numb2[i] <= '9')) {
            n2 = n2 * 10;
            n2 += (int(numb2[i]) - '0');
            mass2[k2] = n2;
        }
        if (numb2[i] == '.') { mass2[k2] = n2; n2 = 0; k2++; }
        if (numb2[i] == '-') { mass2[k2] = n2; n2 = 0; k2++; p2 = 1; break; }
    }

    /*первый процесс удобного сравнения: первый элемент массива - старшая, последний элемент массива - младшая*/
    for (int i = 0;i < t1 + 1;i++) {
        if (mass1[i] > mass2[i]) { cout << numb1 << '>' << numb2; return 1; }
        if (mass1[i] < mass2[i]) { cout << numb1 << '<' << numb2; return -1; }
    }

    /*если цифры-точки-цифры в версиях равны, то проверяем наличие постфикса*/
    if (mass1[t1 + 1] == mass2[t1 + 1]) {
        if (p1 > p2) { cout << numb1 << '<' << numb2;return -1; } /*если у первый есть постфикс, то первый меньше второй*/
        if (p1 < p2) { cout << numb1 << '>' << numb2;return 1; }
        if (p1 == 0) { cout << numb1 << '=' << numb2;return 0; }
        if (p1 == 1) { cout << numb1 << " ? " << numb2 << endl << "необходимо проверить постфикс"; return 2; }
    }
}
